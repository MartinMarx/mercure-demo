{% extends('base.html.twig') %}

{% block body %}
    <div class="wrap">
        <div class="container">
            <h1>Démo Mercure – {{ sender|upper }}</h1>
            <div id="messages">
                {% for message in messages %}
                    <div class="item {{ message.sender == sender ? 'out' : 'in' }}">
                        <div class="body">
                            <p class="content">{{ message.text }}</p>
                            <p class="datetime">{{ message.sender|capitalize }} – {{ message.dateSent|format_datetime() }}</p>
                        </div>
                    </div>
                {% endfor %}
            </div>

            <form onsubmit="return submitMessage();">
                <input autofocus type="text" placeholder="Nouveau message..." id="message-input">
                <button type="submit">Envoyer</button>
            </form>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        async function pushMessage(data) {
            await fetch('{{ path("mercure_publish") }}', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({text: data, sender: "{{ sender }}"})
            });
        }

        function submitMessage() {
            const input = document.getElementById('message-input')
            pushMessage(input.value)
            input.value = ''
            return false;
        }






        // MISC
        function appendMessageToDom(data) {
            let message = document.createElement("div")
            message.classList.add('item')
            if (data.sender === "{{ sender }}") {
                message.classList.add('out')
            } else {
                message.classList.add('in')
            }
            let body = document.createElement('div')
            body.classList.add('body')
            let content = document.createElement("p")
            content.classList.add('content')
            content.innerText = data.text
            let datetime = document.createElement("p")
            datetime.classList.add('datetime')
            datetime.innerText = data.sender + ' – ' + new Intl.DateTimeFormat('fr-FR', {
                dateStyle: 'short',
                timeStyle: 'short'
            }).format(new Date(data.dateSent))

            body.append(content)
            body.append(datetime)
            message.append(body)

            document.getElementById('messages').append(message)
        }
    </script>
{% endblock %}
